name: Terraform Auto-Approve
description: 'Auto-approve terrafrom changes that do not have state changes'
inputs:
  github-token:
    description: 'Github token of the bot used for the auto-approving'
    required: true
  terraform-directory:
    description: 'Root directory for the terraform files'
    required: true
  merge:
    description: 'Enable auto-merging instead (provided token needs admin access)'
    required: false
    default: false
runs:
  using: 'composite'
  steps:
  - run: |
      set -x
      [[ "$GITHUB_EVENT_NAME" == "pull_request" ]] || exit 1
      PR_NUMBER=$(echo "$GITHUB_REF" | cut -d '/' -f3)
      # limited to 100 file changes fix: https://github.com/cli/cli/issues/1393
      gh pr -R "${GITHUB_REPOSITORY}" view "${PR_NUMBER}" --json files --jq '.files.[].path' \
        | grep -qv "^${TERRAFORM_DIR}" && echo "skip=true"|| echo "skip=false" >> $GITHUB_OUTPUT
    shell: bash
    id: check
    env:
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      GITHUB_TOKEN: ${{ inputs.github-token }}
      TERRAFORM_DIR: ${{ inputs.terraform-directory }}
  - uses: actions/download-artifact@v3
    if: steps.check.outputs.skip == 'false' # don't fail
    with:
      name: terraform
      path: summary
  - id: summary
    if: steps.check.outputs.skip == 'false' # don't fail
    shell: bash
    run: cat summary/terraform/*.summary | grep 'true' || echo "has_changes=false" >> $GITHUB_OUTPUT
  - uses: hmarr/auto-approve-action@v3
    if: inputs.merge == false && steps.check.outputs.skip == 'false' && steps.summary.outputs.has_changes == 'false'
    with:
      github-token: ${{ inputs.github-token }}
  - run: |
      PR_NUMBER=$(echo "$GITHUB_REF" | cut -d '/' -f3)
      gh pr -R "${GITHUB_REPOSITORY}" merge "${PR_NUMBER}" --admin -s
    shell: bash
    if: inputs.merge == true && steps.check.outputs.skip == 'false'
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
